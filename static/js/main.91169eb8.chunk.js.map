{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","msg","Navbar","mode","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","value","onChange","event","console","log","target","rows","style","backgroundColor","newText","toLowerCase","showAlert","toUpperCase","document","getElementById","select","navigator","clipboard","writeText","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","join","length","prototype","title","PropTypes","string","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.91169eb8.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>\r\n  )\r\n}\r\n ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Text Utils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode === \"light\"?\"dark\":\"light\"}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype ={\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string\r\n}","import React, {useState} from \"react\";\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange=(event)=>\r\n  {\r\n    console.log(\"handleOnChange\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  //Upper Case\r\n  const handleUpClick = ()=>\r\n  {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  }\r\n\r\n  //Lower Case\r\n  const handleLoClick=()=>\r\n  {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  }\r\n\r\n  //Clear Text Form\r\n  const handleClearClick=()=>\r\n  {\r\n    let newText =\"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  }\r\n\r\n  //Copy Text\r\n  const handleCopy=()=>\r\n  {\r\n    var text = document.getElementById('my-box');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied to Clipboard\", \"success\");\r\n  }\r\n\r\n  //Handle Extra Spaces\r\n  const handleExtraSpaces= () =>\r\n  {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed from text\", \"success\");\r\n  }\r\n\r\n  //Speak Aloud\r\n  const handleSpeakClick=()=>\r\n  {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);  \r\n    props.showAlert(\"Speaking Aloud\", \"success\");\r\n  }\r\n\r\n  return (\r\n      <>\r\n    <div className=\"mb-3\">\r\n      <textarea className={`form-control text-${props.mode ==='light'?'dark':'light'}`}  value={text} onChange={handleOnChange} id=\"my-box\" rows=\"8\" style={{backgroundColor: props.mode ==='light'?'white':'#0a031f'}}></textarea>\r\n      <button className=\"btn btn-outline-primary my-3\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-outline-primary mx-3 my-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-outline-primary\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-outline-danger mx-3 my-3\" onClick={handleClearClick}>Clear Text</button>\r\n      <button className=\"btn btn-outline-success my-3\" onClick={handleSpeakClick}>Speak Aloud</button>\r\n      <button className=\"btn btn-outline-primary mx-3\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className={`container text-${props.mode ==='light'?'dark':'light'}`}>\r\n      <h3>Your text summmary</h3>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p> Time Elapsed to read the text: {0.008 * text.split(\" \").length} minutes</p>\r\n      <h3>Text Preview</h3>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert =(message, type)=>\n  {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode=()=>\n  {\n    if(mode === \"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor =\"#0a031f\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else\n    {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className='container'>\n          <h3 className={`text-${mode ==='light'?'dark':'light'}`}>Enter text to analyze</h3>\n          <TextForm showAlert={showAlert} mode={mode}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}